// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.0'
    apply from: './gradle/config.gradle'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: './gradle/config.gradle'

allprojects {
    repositories {
        google()
        jcenter {
            url "http://jcenter.bintray.com/"
        }
    }
}

subprojects {
    afterEvaluate { project ->
        apply from: "${project.rootDir}/gradle/config.gradle"

        if (project.hasProperty("android")) {   //All the android projects

            //Apply all the configs for the android block here.
            android {
                compileSdkVersion versions.compileSdk
                buildToolsVersion versions.buildTools

                //signingConfigs signingConfig

                if (project.pluginManager.hasPlugin("com.android.application")) {

                    buildTypes {
                        debug {
                            versionNameSuffix ".debug"
                            multiDexEnabled true
                            crunchPngs false
                            testCoverageEnabled true
                            debuggable true
                            jniDebuggable true
                            renderscriptDebuggable false
                            minifyEnabled false
                            zipAlignEnabled true
                            //signingConfig signingConfigs.debug
                        }
                        release {
                            minifyEnabled true
                            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), './proguard-rules.pro'
                            debuggable false
                            jniDebuggable false
                            renderscriptDebuggable false
                            //signingConfig signingConfigs.debug
                            shrinkResources true
                            pseudoLocalesEnabled false
                            zipAlignEnabled true
                        }
                    }
                } else if (project.pluginManager.hasPlugin("com.android.library")) {
                    //This is the library module
                    defaultConfig libDefaultConfig

                    buildTypes {
                        debug {
                            multiDexEnabled true
                            crunchPngs false
                            testCoverageEnabled true
                            debuggable true
                            jniDebuggable true
                            renderscriptDebuggable false
                            minifyEnabled false
                            zipAlignEnabled true
                            //signingConfig signingConfigs.debug
                        }
                        release {
                            debuggable false
                            jniDebuggable false
                            renderscriptDebuggable false
                            pseudoLocalesEnabled false
                            zipAlignEnabled true
                            //signingConfig signingConfigs.debug
                        }
                    }
                }

                //General options
                compileOptions compileOption
                dexOptions dexOption
                packagingOptions packageExcludes
                lintOptions lintOption
                aaptOptions aaptOption
                //testOptions testOption
                adbOptions adbOption
            }

            sourceSets {
                main.java.srcDirs += 'src/main/kotlin'
                test.java.srcDirs += 'src/test/kotlin'
                test.java.srcDirs += 'src/androidTest/kotlin'
            }
        }

        dependencies {
            implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
            implementation "io.reactivex.rxjava2:rxjava:2.2.0"
            //Android libs
            if (project.hasProperty("android")) {
                implementation "io.reactivex.rxjava2:rxandroid:2.0.2"
                //Support libs
                implementation "com.android.support:support-annotations:${versions.supportLibrary}"
                implementation "com.android.support:support-v4:${versions.supportLibrary}"
                implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
                implementation "com.android.support:design:${versions.supportLibrary}"
                implementation "com.android.support:cardview-v7:${versions.supportLibrary}"
                implementation "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
                implementation "com.google.code.gson:gson:${versions.gson}"
                implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
                implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
                implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
                implementation "com.squareup.okhttp3:logging-interceptor:${versions.okHttp}"
                //Glide
                implementation "com.github.bumptech.glide:glide:${versions.glideVersion}"
                kapt "com.github.bumptech.glide:compiler:${versions.glideVersion}"
                //Arch
                implementation "android.arch.lifecycle:common-java8:${versions.archComponent}"
                implementation "android.arch.lifecycle:extensions:${versions.archComponent}"
                //KTX
                implementation('androidx.core:core-ktx:0.3')

                // database
                implementation "android.arch.persistence.room:rxjava2:$versions.roomDatabaseVersion"
                kapt "android.arch.persistence.room:compiler:$versions.roomDatabaseVersion"

                // dependency injection
                implementation "com.google.dagger:dagger:$versions.dagger2Version"
                kapt "com.google.dagger:dagger-compiler:$versions.dagger2Version"
                kapt "com.google.dagger:dagger-android-processor:$versions.dagger2Version"
                implementation "com.google.dagger:dagger-android-support:$versions.dagger2Version"

            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
